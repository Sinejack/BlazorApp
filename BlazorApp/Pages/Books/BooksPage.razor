@page "/books"

@using System.Collections.Generic;
@inject BooksService BooksService

<Title Value="Books"></Title>

<h1>Welcome to books.</h1>

<div class="row mb-3">
    <div class="col-md-12">
        <p>This section will teach you how to: </p>
        <ul>
            <li>Create a model and save into database</li>
            <li>Fetch model data from the database</li>
            <li>Update a model data and save into database</li>
            <li>Delete a model data from database</li>
        </ul>
    </div>
</div>


<div class="row mb-3">
    <div class="col-md-12">
        <p>This part shows how to fetch books via REST API.</p>
        <ol>
            <li>The API host must be reachable. Ensure that the API host (in this example, localhost:44317) is available.</li>
            <li>Create a service class call BookService. The class is responsible to prepare the URI link and send it to the API host using REST API.</li>
            <li>Populate the list upon successful retrieval of books.</li>
        </ol>
    </div>
</div>

@if (books.IsNullOrEmpty())
{
    <p><em>No books in the library currently or host endpoint is unreachable.</em></p>
}
else
{
    <div class="row">
        <div class="col-md-8">
            <table class="table table-striped" id="BooksTable">
                <thead>
                    <tr>
                        <td>No.</td>
                        <td>Title</td>
                        <td>Description</td>
                        <td>Author</td>
                        <td>Publish date</td>
                        <td>Is available?</td>
                        <td></td> <!--to put update icon-->
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < books.Count; i++)
                    {
                        <tr>
                            <td>@(i + 1)</td>
                            <td>@books[i].Title</td>
                            <td>@books[i].Description</td>
                            <td>@books[i].Author</td>
                            <td>@books[i].PublishDate</td>
                            <td>@books[i].IsAvailable</td>
                            <td></td> <!-- To put update icon -->
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="col-md-4">
            <!--Empty for now-->
        </div>
    </div>

}

<div class="row">
    <div class="col-md-12">
        <a class="btn btn-outline-info float-left" href="books/create">
            <span class="oi oi-plus"></span> New Book
        </a>

        @*<button type="button" class="btn btn-outline-info float-left">
            <span class="oi oi-plus"></span> 
        </button>*@
    </div>
</div>

@code {
    private List<Book> books;

    protected override async Task OnInitializedAsync()
    {
        books = await BooksService.GetBooks();
    }
}